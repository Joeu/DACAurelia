{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","G:/Development/Aurelia/todo/src/app.html"],"names":["httpClient","baseUrl","App","heading","getStats","fetch","then","response","json","console","log","data","problems","Problems","users","Users","submissions","Submissions","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot"],"mappings":";;;;;;;;;;;;;;;;AAGA,MAAIA,aAAa,oCAAjB;;AAEA,MAAIC,UAAU,mCAAd;;MAGaC,cAAAA,cADZ;AAGC,mBAAa;AAAA;;AACX,WAAKC,OAAL,GAAe,kBAAf;AACD;;kBAGDC,+BAAU;AAAA;;AACRJ,iBAAWK,KAAX,CAAiBJ,UAAU,QAA3B,EACGK,IADH,CACQ;AAAA,eAAYC,SAASC,IAAT,EAAZ;AAAA,OADR,EAEGF,IAFH,CAEQ,gBAAQ;AACZG,gBAAQC,GAAR,CAAYC,IAAZ;AACA,cAAKC,QAAL,GAAgBD,KAAKE,QAArB;AACA,cAAKC,KAAL,GAAaH,KAAKI,KAAlB;AACA,cAAKC,WAAL,GAAmBL,KAAKM,WAAxB;AACD,OAPH;AAQD;;;;;;;;;;;oBCxBY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBzB,IAAhB,CAAqB;AAAA,aAAMmB,QAAQO,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeZ,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;ACFD","file":"app-bundle.js","sourcesContent":["import {inject} from \"aurelia-framework\";\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\nlet httpClient = new HttpClient();\n\nvar baseUrl = 'http://localhost:8080/bootwildfly';\n\n@inject(HttpClient)\nexport class App {\n\n  constructor(){\n    this.heading = \"DACA - Dirlididi\";\n  }\n\n\n  getStats(){\n    httpClient.fetch(baseUrl + '/stats')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.problems = data.Problems;\n        this.users = data.Users;\n        this.submissions = data.Submissions;\n      });\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n",null],"sourceRoot":"..\\src"}